#include <Adafruit_GFX.h>
#include <Adafruit_NeoMatrix.h>
#include <Adafruit_NeoPixel.h>

#include <Arduino.h> 

#define PIN_NEOPIXEL 14
#define DELAY 100
#define PIXELS 64


// Adafruit_NeoPixel strip = Adafruit_NeoPixel(PIXELS, PIN_NEOPIXEL);
Adafruit_NeoMatrix matrix = Adafruit_NeoMatrix(8, 8, PIN_NEOPIXEL,
    NEO_TILE_TOP   + NEO_TILE_LEFT   + NEO_TILE_ROWS   + NEO_TILE_PROGRESSIVE +
    NEO_MATRIX_TOP + NEO_MATRIX_LEFT + NEO_MATRIX_ROWS + NEO_TILE_PROGRESSIVE,
    NEO_GRB + NEO_KHZ800);
  

int sprite[4][64][4] = {
    {{0, 0, 0, 0},{0, 0, 0, 0},{86, 89, 82, 0},{0, 0, 0, 0},{0, 0, 0, 0},{86, 89, 82, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{63, 63, 116, 0},{0, 0, 0, 0},{63, 63, 116, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{0, 0, 0, 0},{63, 63, 116, 0},{0, 0, 0, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{0, 0, 0, 0},{63, 63, 116, 0},{0, 0, 0, 0},{0, 0, 0, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{40, 69, 60, 0},{0, 0, 0, 0},{0, 0, 0, 0},{40, 69, 60, 0},{0, 0, 0, 0},{0, 0, 0, 0},},
{{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{86, 89, 82, 0},{0, 0, 0, 0},{0, 0, 0, 0},{86, 89, 82, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{63, 63, 116, 0},{0, 0, 0, 0},{63, 63, 116, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{40, 69, 60, 0},{0, 0, 0, 0},{0, 0, 0, 0},{40, 69, 60, 0},{0, 0, 0, 0},{0, 0, 0, 0},},
{{0, 0, 0, 0},{0, 0, 0, 0},{86, 89, 82, 0},{0, 0, 0, 0},{0, 0, 0, 0},{86, 89, 82, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{63, 63, 116, 0},{0, 0, 0, 0},{63, 63, 116, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{0, 0, 0, 0},{63, 63, 116, 0},{0, 0, 0, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{0, 0, 0, 0},{63, 63, 116, 0},{0, 0, 0, 0},{0, 0, 0, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{40, 69, 60, 0},{0, 0, 0, 0},{0, 0, 0, 0},{40, 69, 60, 0},{0, 0, 0, 0},{0, 0, 0, 0},},
{{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{86, 89, 82, 0},{0, 0, 0, 0},{0, 0, 0, 0},{86, 89, 82, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{63, 63, 116, 0},{0, 0, 0, 0},{63, 63, 116, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{63, 63, 116, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{0, 0, 0, 0},{40, 69, 60, 0},{0, 0, 0, 0},{0, 0, 0, 0},{40, 69, 60, 0},{0, 0, 0, 0},{0, 0, 0, 0},},
};

const uint16_t colors[] = {
    matrix.Color(255, 0, 0), matrix.Color(0, 255, 0), matrix.Color(0, 0, 255) };
  
  void setup() {
    matrix.begin();
    matrix.setTextWrap(false);
    matrix.setBrightness(5);
    matrix.setTextColor(colors[0]);
  }
  
  int x    = matrix.width();
  int pass = 0;
  
  void loop() {
    matrix.fillScreen(0);
    matrix.setCursor(x, 0);
    matrix.print(F("Hello World!"));
    if(--x < -70) {
      x = matrix.width();
      if(++pass >= 3) pass = 0;
    }
    matrix.setTextColor(colors[pass]);
    matrix.show();
    delay(80);
  }


// void setup() {
//  Serial.begin(115200);
//  strip.setBrightness(5);
//  strip.begin();
//  strip.show(); // Initialize all pixels to 'off' only run once, it runs right when you turn it on
// }


// void loop() {
//   const int length = 6;
//   int spriteIndex = 0;

//   for (;;) {
//     for (int i = 0; i < 64; i++) {
//         strip.setPixelColor(i, sprite[spriteIndex][i][0], sprite[spriteIndex][i][1], sprite[spriteIndex][i][2], 0);
//     }
//     strip.show();
//     delay(DELAY);
//     spriteIndex = (spriteIndex + 1) % 4;
//   }

// //   for(int i = 0; i < PIXELS + length / 2; i++){
// //     const int index = i % PIXELS;
// //     strip.setPixelColor(i - length / 2, 0, 0, 0, 0);
// //     strip.setPixelColor(index, random(255), random(255), random(255), 0);
// //     strip.show();
// //     delay(DELAY);
// //   }
//   // for(int i = strip.numPixels() - 1; i >= 0; i--){
//   //   strip.setPixelColor(i, 0, 0, 0, 0);
//   //   strip.show();
//   //   delay(50);
//   // }
// }

